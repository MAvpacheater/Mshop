// Shop.js - –õ–æ–≥—ñ–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω—É

class Shop {
    constructor() {
        this.products = [
            {
                id: 1,
                name: "–°–º–∞—Ä—Ç—Ñ–æ–Ω iPhone 15",
                price: 35000,
                image: "https://via.placeholder.com/200x200/007ACC/ffffff?text=iPhone+15",
                description: "–ù–æ–≤–∏–π iPhone 15 –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –∫–∞–º–µ—Ä–æ—é"
            },
            {
                id: 2,
                name: "–ù–æ—É—Ç–±—É–∫ MacBook Air",
                price: 45000,
                image: "https://via.placeholder.com/200x200/FF6B35/ffffff?text=MacBook",
                description: "MacBook Air M2 - –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —É –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º—É –∫–æ—Ä–ø—É—Å—ñ"
            },
            {
                id: 3,
                name: "–ù–∞–≤—É—à–Ω–∏–∫–∏ AirPods",
                price: 8500,
                image: "https://via.placeholder.com/200x200/28A745/ffffff?text=AirPods",
                description: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ –∞–∫—Ç–∏–≤–Ω–∏–º —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è–º"
            },
            {
                id: 4,
                name: "–ü–ª–∞–Ω—à–µ—Ç iPad",
                price: 22000,
                image: "https://via.placeholder.com/200x200/DC3545/ffffff?text=iPad",
                description: "iPad 10.9 –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ç–∞ —Ä–æ–∑–≤–∞–≥"
            },
            {
                id: 5,
                name: "Apple Watch",
                price: 15000,
                image: "https://via.placeholder.com/200x200/6F42C1/ffffff?text=Watch",
                description: "–†–æ–∑—É–º–Ω–∏–π –≥–æ–¥–∏–Ω–Ω–∏–∫ –∑ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º –∑–¥–æ—Ä–æ–≤'—è"
            },
            {
                id: 6,
                name: "–ó–∞—Ä—è–¥–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π",
                price: 2500,
                image: "https://via.placeholder.com/200x200/FD7E14/ffffff?text=Charger",
                description: "–®–≤–∏–¥–∫–∏–π –∑–∞—Ä—è–¥–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π USB-C 20W"
            }
        ];
        
        this.cart = [];
        this.init();
    }

    init() {
        this.renderProducts();
        this.setupEventListeners();
    }

    renderProducts() {
        const container = document.getElementById('shop-container');
        
        const productsHTML = `
            <div class="products-grid">
                ${this.products.map(product => this.createProductCard(product)).join('')}
            </div>
        `;
        
        container.innerHTML = productsHTML;
    }

    createProductCard(product) {
        return `
            <div class="product-card" data-product-id="${product.id}">
                <div class="product-image">
                    <img src="${product.image}" alt="${product.name}" loading="lazy">
                </div>
                <div class="product-info">
                    <h3 class="product-name">${product.name}</h3>
                    <p class="product-description">${product.description}</p>
                    <div class="product-price">
                        <span class="price">${this.formatPrice(product.price)} ‚Ç¥</span>
                    </div>
                    <button class="add-to-cart-btn" onclick="shop.addToCart(${product.id})">
                        üõí –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏
                    </button>
                </div>
            </div>
        `;
    }

    formatPrice(price) {
        return price.toLocaleString('uk-UA');
    }

    addToCart(productId) {
        const product = this.products.find(p => p.id === productId);
        if (product) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ç–æ–≤–∞—Ä –≤–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω—ñ
            const existingItem = this.cart.find(item => item.id === productId);
            
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                this.cart.push({
                    ...product,
                    quantity: 1
                });
            }
            
            this.updateCartUI();
            this.showNotification(`${product.name} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏!`);
            
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –¥–æ Telegram –±–æ—Ç–∞ (—è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ)
            this.sendDataToTelegram();
        }
    }

    updateCartUI() {
        // –¢—É—Ç –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI –∫–æ—Ä–∑–∏–Ω–∏ (–±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –ø—ñ–∑–Ω—ñ—à–µ)
        console.log('–ö–æ—Ä–∑–∏–Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞:', this.cart);
    }

    showNotification(message) {
        // –ü—Ä–æ—Å—Ç–∏–π toast notification
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 3000);
    }

    sendDataToTelegram() {
        // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–æ Telegram –±–æ—Ç–∞
        if (window.Telegram && window.Telegram.WebApp) {
            const cartData = {
                cart: this.cart,
                total: this.getCartTotal()
            };
            
            window.Telegram.WebApp.sendData(JSON.stringify(cartData));
        }
    }

    getCartTotal() {
        return this.cart.reduce((total, item) => total + (item.price * item.quantity), 0);
    }

    setupEventListeners() {
        // –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—ñ–≤ –ø–æ —Ç–æ–≤–∞—Ä–∞—Ö
        document.addEventListener('click', (e) => {
            if (e.target.closest('.product-card')) {
                const productCard = e.target.closest('.product-card');
                const productId = parseInt(productCard.dataset.productId);
                
                // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–æ–≤–∞—Ä
                if (!e.target.classList.contains('add-to-cart-btn')) {
                    this.showProductDetails(productId);
                }
            }
        });
    }

    showProductDetails(productId) {
        const product = this.products.find(p => p.id === productId);
        if (product) {
            // –¢—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
            console.log('–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ç–æ–≤–∞—Ä—É:', product);
        }
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–∞–≥–∞–∑–∏–Ω—É –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
    window.shop = new Shop();
});

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö —Ñ–∞–π–ª–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = Shop;
}
